swagger: '2.0'
info:
  version: 1.0.0
  title: Syncrypt Daemon
  contact:
    email: info@syncrypt.space
host: '127.0.0.1:28080'
basePath: /v1
tags:
  - name: account
    description: Registration and login calls
  - name: vault
    description: Everything about your Vaults
  - name: keys
    description: Key and identity management
  - name: admin
    description: Administrative API calls
schemes:
  - http
paths:
  /vault/:
    get:
      parameters:
        - name: force_refresh
          in: query
          description: >-
            If set to 1, this will refresh vault information from server.
          required: false
          type: integer
      tags:
        - vault
      summary: List all local vaults
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Vault'
        '400': # 4XX
          description: An error occurred during operation
          schema:
            $ref: '#/definitions/ApiErrorResponse'
      security:
        - api_key: []
    post:
      tags:
        - vault
      summary: Create, clone or import a new vault
      description: ''
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: params
          in: body
          description: Account parameters
          schema:
            type: object
            required:
              - folder
            properties:
              folder:
                type: string
                example: /home/user/vaults/new_vault
              id:
                type: string
              import_package:
                type: string
                example: /home/user/vault_export.zip
      responses:
        '200':
          description: successful operation
      security:
        - api_key: []
  '/vault/{vaultId}/':
    delete:
      tags:
        - vault
      summary: Delete vault from list (stop syncing)
      description: ''
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: >-
            Local vault ID
          required: true
          type: integer
        - name: wipe
          in: query
          description: >-
            If set to 1, this will also wipe remote vault and remove local keys
            and metadata (use with care)
          required: false
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
        '400': # 4XX
          description: An error occurred during operation
          schema:
            $ref: '#/definitions/ApiErrorResponse'
      security:
        - api_key: []
  '/vault/{vaultId}/users/':
    get:
      tags:
        - vault
      summary: List all users in a vault
      description: ''
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      security:
        - api_key: []
  '/vault/{vaultId}/export/':
    get:
      tags:
        - vault
      summary: Export the vault package including the vault key to a given path
      description: ''
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '400': # 4XX
          description: An error occurred during operation
          schema:
            $ref: '#/definitions/ApiErrorResponse'
      security:
        - api_key: []
  /flying-vault/:
    get:
      tags:
        - vault
      summary: List all remote vaults
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/FlyingVault'
        '400': # 4XX
          description: An error occurred during operation
          schema:
            $ref: '#/definitions/ApiErrorResponse'
      security:
        - api_key: []
  '/flying-vault/{remoteId}/':
    delete:
      tags:
        - vault
      summary: Wipe remote vault
      description: ''
      produces:
        - application/json
      parameters:
        - name: remoteId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: wipe
          in: query
          description: Wipe confirmation (must be 1)
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
        '400': # 4XX
          description: An error occurred during operation
          schema:
            $ref: '#/definitions/ApiErrorResponse'
      security:
        - api_key: []
  /auth/signup/:
    post:
      tags:
        - account
      summary: Register a new user account
      description: ''
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: params
          in: body
          description: Account parameters
          schema:
            type: object
            required:
              - username
              - password
              - first_name
              - last_name
            properties:
              username:
                type: string
                example: mail@example.com
              password:
                type: string
              first_name:
                type: string
              last_name:
                type: string
      responses:
        '200':
          description: successful operation
      security:
        - api_key: []
  /identity/generate/:
    get:
      tags:
        - keys
      summary: Generate the user key
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
      security:
        - api_key: []
  /identity/export/:
    post:
      tags:
        - keys
      summary: Export the user key
      description: ''
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: params
          in: body
          description: Export parameters
          schema:
            type: object
            required:
              - path
            properties:
              path:
                type: string
                example: /tmp/user-key-export.zip
      responses:
        '200':
          description: successful operation
      security:
        - api_key: []
  /identity/import/:
    post:
      tags:
        - keys
      summary: Import the user key
      description: ''
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: params
          in: body
          description: Import parameters
          schema:
            type: object
            required:
              - path
            properties:
              path:
                type: string
                example: /tmp/user-key-export.zip
      responses:
        '200':
          description: successful operation
      security:
        - api_key: []
  /version/:
    get:
      tags:
        - admin
      summary: Get the current version
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
      security:
        - api_key: []
  /stats/:
    get:
      tags:
        - admin
      summary: Runtime statistics about the daemon
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
      security:
        - api_key: []
  /restart/:
    get:
      tags:
        - admin
      summary: Restart the daemon
      operationId: restart
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /shutdown/:
    get:
      tags:
        - admin
      summary: Shutdown the daemon
      operationId: shutdown
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
securityDefinitions:
  api_key:
    type: apiKey
    name: X-AuthToken
    in: header
definitions:
  Vault:
    type: object
    required:
      - id
      - folder
      - status
    properties:
      id:
        type: string
        example: 67cbad12-3b90-4109-8920-cce923131154
      folder:
        type: string
        example: /path/to/local/folder
      status:
        type: string
        example: synced
  FlyingVault:
    type: object
    required:
      - id
      - resource_uri
      - file_count
      - user_count
      - revision_count
    properties:
      id:
        type: string
        example: e2d79981-c7c6-4ce1-99c1-60aeb8730154
      resource_uri:
        type: string
        example: /v1/flying-vault/e2d79981-c7c6-4ce1-99c1-60aeb8730154/
      file_count:
        type: integer
        example: 12
      user_count:
        type: integer
        example: 1
      revision_count:
        type: integer
        example: 4
  ApiResponse:
    type: object
    properties:
      status:
        type: string
        example: ok
  ApiErrorResponse:
    type: object
    properties:
      status:
        type: string
        example: error
      reason:
        type: string
        example: An error occurred.
      code:
        type: string
        enum:
        - FolderExistsAndIsNotEmpty
        - InvalidAuthentifaction
        - ServerError
        - VaultAlreadyExists
        - VaultIsAlreadySyncing
        - VaultNotFound
        - VaultNotInitialized
  User:
    type: object
    required:
      - id
      - folder
      - status
    properties:
      resource_uri:
        type: string
      email:
        type: string
        example: example@syncrypt.space
externalDocs:
  description: Syncrypt website
  url: 'https://syncrypt.space'
