#!/usr/bin/env python
import argparse
import logging
import logging.config
import os.path
import sys

import asyncio
from syncrypt import Vault
from syncrypt.app import SyncryptApp
from syncrypt.config import VaultConfig
from syncrypt.utils.daemon import Daemon

COMMANDS = ['start', 'stop', 'restart']
LOGLEVELS = ['CRITICAL', 'ERROR', 'WARN', 'INFO', 'DEBUG']

parser = argparse.ArgumentParser(description='Run Syncrypt client')
parser.add_argument('command', metavar='cmd', type=str,
        choices=COMMANDS, help='Command to run: ' + ', '.join(COMMANDS))
parser.add_argument('-d', metavar='DIRECTORY', type=str,
        action='append',dest='directory', help='directory (default: .)')

config = parser.parse_args()

app = SyncryptApp(VaultConfig())
for directory in (['.'] if config.directory is None else config.directory):
    app.add_vault(Vault(directory))

class SyncryptDaemon(Daemon):
    def run(self):
        loop = asyncio.get_event_loop()
        loop.run_until_complete(app.start())
        loop.run_forever()

syncryptd = SyncryptDaemon('/tmp/syncrypt.pid')
getattr(syncryptd, config.command)()

