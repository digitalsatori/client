language: python
matrix:
  include:
    - os: linux
      python: 3.7
      dist: xenial
    - os: osx
      sudo: required
      language: generic
      # This will build OS X 10.11 instead of default 10.12.
      # We need this to get builds running on older OS X versions.
      osx_image: xcode7.3
      env: PYTHON_VERSION=3.7.0
addons:
  apt:
    packages:
    - libsnappy-dev

# command to install dependencies
# Manually install python on osx
install: |
  # Receive tags so that our versioning works correctly
  git fetch --unshallow --tags
  if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
      brew update >/dev/null;
      brew install snappy;
      brew upgrade pyenv;
      PYTHON_CONFIGURE_OPTS="--enable-framework" pyenv install $PYTHON_VERSION;
      pyenv local $PYTHON_VERSION;
      pyenv global $PYTHON_VERSION;
      $(pyenv root)/shims/python -m venv venv;
      source venv/bin/activate;
      pip install 'setuptools>=38.5'
      pip install -e '.[dist]'
      pip install -e '.[test]'
  else
      pip install 'setuptools>=38.5'
      pip install -e '.[dist]'
      pip install -e '.[test]'
      if [[ $TRAVIS_PYTHON_VERSION == '3.6' ]]; then
          pip install --upgrade 'pyinstaller==3.3'
      fi
  fi

before_script:
  - mypy syncrypt tests scripts/syncrypt_daemon
  - pylint syncrypt scripts
  - py.test -m 'not (requires_server or external_resources)'

# command to build
script:
  - python setup.py dist
  # Try to run the compiled executables to see if we run in import errors
  - "./dist/syncrypt-bin --help"
  - "./dist/syncrypt_daemon -h"

deploy:
  - provider: script
    script: BRANCH=$TRAVIS_BRANCH python setup.py deploy
    skip_cleanup: true
    on:
      all_branches: true
      condition: ( $DEPLOY_ARTIFACT == 'true' )
  - provider: pypi
    user: lordi
    password:
      secure: Tuf6fL62LvkmDfYWmdPH1VMLBV0mNeBWcEJJcQd1VN4vtQnFsmq9eU1CB9tAajpazBTNQBj9gfgcdBSBbT5Wg9rcSGbNFXlWEDxvTdVokpRzByCQNR2NEbGuoQF4pcSD8VSTO6blVDM+XVccSSMIzJJbINulZFiveNgZj3lWMa8B+AqTr+ACuekeU5V1VfkmJ1pWVhwnJ4kj75dsRV7BFtZrGoA5UsuVu4tEUDbUQYuMEOEDbFJ2/uka8KvKcaoFvs5kToiohSH0t+umtnXZe3T+S6Xdn9bw97yyAEwE+7U1UlqXj+uOvtjvtFs+Ai1F40MEVGd2GjC7H5NP4HknrKl+k1VhYEyjCV8SvXBryEvrYYjgYmAET2dMu+AmsOzGcjwV4TT7YhQ0F75aZb8HKnJOX7/UQeUSNhBZIw5NBnrDyPf+5t+FrUJdjtALxrMlhM5nEjm9rCYwo2r+f6+dKiibg9uVej+RbesTJNBHBorbzZBe5B7EFadmfUTRM74cH02OTm8PvaCfrp9jDNfQ3WombUqwSyQIm+EX83BC89sws+ixcmcnVXJLwaK+y8JP+0zpe7YinesvV5rfntH6WBBjVNAVYbi2LIbEfcRMAHe29tKvf+nRcS5KtWCtqJol+w5NxpHcjWYF60xuesjiS6KjneZAoCstJJbyXfc+8+4=
    on:
      tags: true
      condition: |
        ( $TRAVIS_PYTHON_VERSION == '3.6' ) && ( $TRAVIS_OS_NAME == 'linux' )

